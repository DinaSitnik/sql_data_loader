CREATE OR REPLACE PROCEDURE load_nsi_test()
 LANGUAGE plpgsql
as $procedure$
DECLARE 
	fn_clsn_sys CONSTANT  int2 :=1485;
	sn_clsn_sys CONSTANT  int2 :=1486;
	ext_sys CONSTANT int2 :=1111;
	loc_code CONSTANT int2 :=1049;

	i record;
	j record;
	v_valtype int2;
	group_id int8;
	v_id int8;
BEGIN 
 -----------создание процедуры и таблицы логирования-----------
	DROP TABLE IF EXISTS tmp_log;
	
	CREATE TABLE tmp_log (
	    id int8 NOT NULL GENERATED BY DEFAULT as IDENTITY,
		dtime timestamptz(6) NOT NULL,
		mess varchar(1000) NOT NULL
	); 
	CREATE INDEX tmp_log_dtime_idx ON tmp_log USING btree (dtime, mess);

   CREATE OR REPLACE PROCEDURE log_into(aMess varchar(1000))
   AS $log_prc$      
   BEGIN  
	INSERT INTO tmp_log (dtime, mess)
	 	VALUES (CURRENT_TIMESTAMP(6), aMess);	   
   END; $log_prc$ language plpgsql;
  
	  
	CALL log_into('ПРЦЕДУРА ЗАГРУЗКИ ДАННЫХ СТАРТ');
	
	CALL log_into('Создали таблицу tmp_log и процедуру логирования');
	------------------------------------------------------------------
	CALL log_into('Загрузка классификатора оборудования СТАРТ');
	
	SELECT id INTO group_id FROM eq_equipment_group WHERE code::int8 = 0;

	FOR i IN 
             SELECT  
				eg.eq_equipment_group_id AS group_id, 
				ec.new_code, 
				ec.equipm_cls_id,
				eca_fn.identifier full_name, 		
             	COALESCE(eca_sn.identifier, eca_fn.identifier) short_name
			 FROM equipm_cls_ex_catalog  ec
			 LEFT JOIN  eq_equipment_group_external_code eg ON eg.code::int8  = ec.group_id  AND eg.external_system = ext_sys
             LEFT JOIN  equipm_cls_alias  eca_fn ON eca_fn.equipm_cls_id = ec.equipm_cls_id AND eca_fn.naming_or_clsn_sys_s = fn_clsn_sys
             LEFT JOIN  equipm_cls_alias eca_sn ON eca_sn.equipm_cls_id = ec.equipm_cls_id AND eca_sn.naming_or_clsn_sys_s = sn_clsn_sys 
           	 WHERE ec.is_leaf = 0  
	LOOP   
	   INSERT INTO eq_equipment_model_classifier  (eq_equipment_group_id, code)
	     VALUES(coalesce(i.group_id, group_id), i.new_code) RETURNING eq_equipment_model_classifier.id INTO v_id;
	   INSERT INTO eq_equipment_model_classifier_localization (locale, name, s_name, eq_equipment_model_classifier_id)
	     VALUES (loc_code, i.full_name, i.short_name, v_id);
	   INSERT INTO eq_equipment_model_classifier_external_code (external_system, code, eq_equipment_model_classifier_id)
	      VALUES (ext_sys, i.EQUIPM_CLS_ID, v_id);	    
   END LOOP;
	
	 FOR i IN 
	 		SELECT 	ecc.id, eccec.code::int8, 
	 				ec.parent_cls_id, 
	 				eccec_pi.eq_equipment_model_classifier_id parent_id 
	 		FROM eq_equipment_model_classifier ecc
	        LEFT JOIN  eq_equipment_model_classifier_external_code eccec ON ecc.id= eccec.eq_equipment_model_classifier_id 
	        LEFT JOIN  equipm_cls_ex_catalog ec ON ec.EQUIPM_CLS_ID = eccec.code::int8
	        LEFT JOIN  eq_equipment_model_classifier_external_code eccec_pi on ec.parent_cls_id = eccec_pi.code::int8 
	        WHERE eccec_pi.eq_equipment_model_classifier_id IS NOT NULL      
	   LOOP 
		    UPDATE eq_equipment_model_classifier SET parent_id = i.parent_id  
		    	WHERE id= i.id;
	   END LOOP;
 	CALL log_into('Загрузка классификатора оборудования ФИНИШ');
 ------------------------------------------------------------------
 	CALL log_into('Загрузка моделей оборудования СТАРТ'); 
 	FOR i IN
 	 		SELECT 
 				ec.parent_cls_id, 
 				eccec.eq_equipment_model_classifier_id catalog_id,  
 				ec.new_code, 
 				ec.equipm_cls_id, 
 				eca_fn.identifier full_name, 
                COALESCE(eca_sn.identifier, eca_fn.identifier)  short_name
              FROM equipm_cls_ex_catalog ec
              LEFT JOIN equipm_cls_alias eca_fn on eca_fn.equipm_cls_id = ec.equipm_cls_id AND eca_fn.naming_or_clsn_sys_s = fn_clsn_sys
              LEFT JOIN equipm_cls_alias eca_sn on eca_sn.equipm_cls_id = ec.equipm_cls_id AND eca_sn.naming_or_clsn_sys_s = sn_clsn_sys
              LEFT JOIN eq_equipment_model_classifier_external_code eccec on ec.parent_cls_id = eccec.code::int8              
              WHERE ec.is_leaf = 1 
	LOOP 
		   INSERT INTO eq_equipment_model  (eq_equipment_model_classifier_id , code)
		     VALUES(i.catalog_id, i.new_code) RETURNING eq_equipment_model.id INTO v_id;
		   INSERT INTO eq_equipment_model_localization (locale, name, s_name, eq_equipment_model_id)
		     VALUES (loc_code, i.full_name, i.short_name, v_id);
		   INSERT INTO eq_equipment_model_external_code (external_system, code, eq_equipment_model_id)
		      VALUES (ext_sys, i.EQUIPM_CLS_ID, v_id);  
	END LOOP;
	CALL log_into('Загрузка моделей оборудования ФИНИШ'); 
------------------------------------------------------------------
	CALL log_into('Загрузка единиц измерения СТАРТ'); 
	FOR i IN 
			SELECT osru.r_uom_id, coalesce(osru.identifier, osru.r_uom_id) code, 
				osru.acronym, osmca.identifier, osmca.naming_sys_id 
			FROM r_uom osru
	        LEFT JOIN md_code_alias osmca on osru.r_uom_id = osmca.code_s 
	        WHERE osmca.naming_sys_id in (fn_clsn_sys)
	LOOP
		   INSERT INTO eq_property_measure  (code)
		     VALUES (i.code) RETURNING eq_property_measure.id INTO v_id;
		   INSERT INTO eq_property_measure_localization (locale, name, s_name, eq_property_measure_id)
		     VALUES (loc_code, i.identifier, i.acronym, v_id);
		   INSERT INTO eq_property_measure_external_code (external_system, code, eq_property_measure_id)
		      VALUES (ext_sys, i.r_uom_id, v_id); 
	END LOOP;
		
	CALL log_into('Загрузка единиц измерения ФИНИШ'); 
------------------------------------------------------------------
	CALL log_into('Загрузка свойств СТАРТ'); 

	FOR i IN 
			SELECT peg.*, mc.eq_property_measure_id m_code,
             	   peg.full_name v_short_name                  
             FROM weq_equipm_cls_property_ex_grouped peg
             LEFT JOIN  eq_property_measure_external_code mc on mc.code::int8 = peg.uom_id
  	LOOP
      CASE 
	      WHEN i.value_type = 'NumbUnitsQuantity' THEN v_valtype = 1128;
	      WHEN i.value_type = 'CharString' 		  THEN v_valtype = 1000;
	      WHEN i.value_type = 'DateANDTime' 	  THEN v_valtype = 2021;
	      WHEN i.value_type = 'Integer' 		  THEN v_valtype = 1064;
      END CASE;  
  
	    INSERT INTO eq_property  (code, data_type, eq_property_measure_id)
	      VALUES (i.code, v_valtype, i.m_code) RETURNING eq_property.id INTO v_id;
	    INSERT INTO eq_property_localization (locale, name, s_name, eq_property_id)
	     VALUES (loc_code, i.full_name, i.v_short_name, v_id);
	    INSERT INTO eq_property_external_code (external_system, code, eq_property_id)
	      VALUES (ext_sys, i.property_kind_id, v_id);  
  	END LOOP;
   CALL log_into('Загрузка свойств ФИНИШ'); 
------------------------------------------------------------------
   CALL log_into('Загрузка ассоциаций классификатора со свойствами СТАРТ'); 
   FOR i IN 
   		SELECT ec.eq_property_id code_prop, ec_cl.eq_equipment_model_classifier_id code_class 
   		FROM equipm_cls_catalog_prop_asn pe
        JOIN eq_property_external_code ec ON ec.code::int8 = pe.property_kind_id
        JOIN eq_equipment_model_classifier_external_code ec_cl ON ec_cl.code::int8 = pe.equipm_cls_id
    LOOP
	     INSERT INTO eq_equipment_model_classifier_property_asn (eq_equipment_model_classifier_id, eq_property_id)
	       VALUES (i.code_class, i.code_prop);
    END LOOP;
	CALL log_into('Загрузка ассоциаций классификатора со свойствами ФИНИШ'); 
------------------------------------------------------------------
	CALL log_into('Загрузка значений свойств классификатора СТАРТ'); 
 	FOR i IN 
  		SELECT ec.id asn_id, ospgq.data_val val_q, ospgi.data_val val_i, ospgd.data_val val_d                        
		FROM eq_equipment_model_classifier_property_asn ec 
        JOIN eq_equipment_model_classifier_external_code ecec ON ecec.eq_equipment_model_classifier_id = ec.eq_equipment_model_classifier_id 
        	AND ecec.external_system = ext_sys
		JOIN eq_property_external_code epec ON ec.eq_property_id = epec.eq_property_id
        LEFT JOIN p_generic_quantity ospgq ON ospgq.global_root_data_s = ecec.code::int8 AND epec.code ::int8 = ospgq.property_kind_id
        LEFT JOIN p_generic_integer ospgi ON ospgi.global_root_data_s = ecec.code::int8 AND epec.code ::int8 = ospgq.property_kind_id
        LEFT JOIN p_generic_date ospgd ON ospgd.global_root_data_s = ecec.code::int8 AND epec.code ::int8 = ospgq.property_kind_id
        WHERE ospgq.data_val IS NOT NULL OR	ospgi.data_val IS NOT NULL OR ospgd.data_val IS NOT NULL
   LOOP
     INSERT INTO eq_equipment_model_classifier_property_asn_value 
     		(eq_equipment_model_classifier_property_asn_id, date_time_value, double_value, int_value,start_time,is_read_only,is_required)       
       VALUES (i.asn_id, to_timestamp(i.val_d, 'DD.MM.YYYY HH24:MI:SS'), i.val_q, i.val_i,now(), 0, 0);
   END LOOP; 
   CALL log_into('Загрузка значений свойств классификатора ФИНИШ'); 
------------------------------------------------------------------
	CALL log_into('Загрузка оргединиц СТАРТ'); 
	FOR i IN
		SELECT bs.bsasc_id, bs.kind_id, eout.eq_organization_unit_type_id AS type_id, bs.entity_name,
			   ba.IDENTIFIER as full_name, ba2.identifier AS short_name
		FROM bsasc  bs
		LEFT JOIN bsasc_alias ba ON ba.bsasc_id = bs.bsasc_id AND ba.naming_sys_id = fn_clsn_sys
		LEFT JOIN bsasc_alias ba2 ON ba2.bsasc_id = bs.bsasc_id AND ba2.naming_sys_id = sn_clsn_sys
		JOIN eq_organization_unit_type_external_code eout ON eout.code::int8 = bs.kind_id
		WHERE bs.entity_name NOT IN ('materially_liable','man') AND bs.end_date IS NULL
	LOOP    
		INSERT INTO eq_organization_unit  (eq_organization_unit_type_id)
		   VALUES (i.type_id) RETURNING eq_organization_unit.id INTO v_id;
		INSERT INTO eq_organization_unit_localization (locale, name, s_name, eq_organization_unit_id)
		   VALUES (loc_code, i.full_name, i.short_name, v_id);
		INSERT INTO eq_organization_unit_external_code (external_system, code, eq_organization_unit_id)
		   VALUES (ext_sys, i.bsasc_id, v_id);     
	END LOOP;
	CALL log_into('Загрузка оргединиц ФИНИШ');
END;
$procedure$;
